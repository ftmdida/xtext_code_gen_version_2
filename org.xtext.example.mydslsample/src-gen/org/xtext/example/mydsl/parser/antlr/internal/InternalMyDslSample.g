/*
 * generated by Xtext
 */
grammar InternalMyDslSample;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslSampleGrammarAccess;

}

@parser::members {

 	private MyDslSampleGrammarAccess grammarAccess;
 	
    public InternalMyDslSampleParser(TokenStream input, MyDslSampleGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "HttpShieldModel";	
   	}
   	
   	@Override
   	protected MyDslSampleGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleHttpShieldModel
entryRuleHttpShieldModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHttpShieldModelRule()); }
	 iv_ruleHttpShieldModel=ruleHttpShieldModel 
	 { $current=$iv_ruleHttpShieldModel.current; } 
	 EOF 
;

// Rule HttpShieldModel
ruleHttpShieldModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getHttpShieldModelAccess().getAgentsAgentParserRuleCall_0()); 
	    }
		lv_agents_0_0=ruleAgent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHttpShieldModelRule());
	        }
       		add(
       			$current, 
       			"agents",
        		lv_agents_0_0, 
        		"Agent");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleAgent
entryRuleAgent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAgentRule()); }
	 iv_ruleAgent=ruleAgent 
	 { $current=$iv_ruleAgent.current; } 
	 EOF 
;

// Rule Agent
ruleAgent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getUserParserRuleCall_0()); 
    }
    this_User_0=ruleUser
    { 
        $current = $this_User_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getAttackerParserRuleCall_1()); 
    }
    this_Attacker_1=ruleAttacker
    { 
        $current = $this_Attacker_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAgentAccess().getDefenderParserRuleCall_2()); 
    }
    this_Defender_2=ruleDefender
    { 
        $current = $this_Defender_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleUser
entryRuleUser returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUserRule()); }
	 iv_ruleUser=ruleUser 
	 { $current=$iv_ruleUser.current; } 
	 EOF 
;

// Rule User
ruleUser returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_type_0_0=	'User' 
    {
        newLeafNode(lv_type_0_0, grammarAccess.getUserAccess().getTypeUserKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUserRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_0, "User");
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getUserAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUserRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUserAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='belongTo' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUserAccess().getBelongToKeyword_3());
    }
(
(
		lv_filename_4_0=RULE_STRING
		{
			newLeafNode(lv_filename_4_0, grammarAccess.getUserAccess().getFilenameSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUserRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"filename",
        		lv_filename_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='source: ' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getUserAccess().getSourceKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserAccess().getSourceIPAddressParserRuleCall_6_0()); 
	    }
		lv_source_6_0=ruleIPAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_6_0, 
        		"IPAddress");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUserAccess().getRequestsNormalRequestParserRuleCall_7_0()); 
	    }
		lv_requests_7_0=ruleNormalRequest		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserRule());
	        }
       		add(
       			$current, 
       			"requests",
        		lv_requests_7_0, 
        		"NormalRequest");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUserAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleAttacker
entryRuleAttacker returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttackerRule()); }
	 iv_ruleAttacker=ruleAttacker 
	 { $current=$iv_ruleAttacker.current; } 
	 EOF 
;

// Rule Attacker
ruleAttacker returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_type_0_0=	'Attacker' 
    {
        newLeafNode(lv_type_0_0, grammarAccess.getAttackerAccess().getTypeAttackerKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttackerRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_0, "Attacker");
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAttackerAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttackerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttackerAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='belongTo' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAttackerAccess().getBelongToKeyword_3());
    }
(
(
		lv_filename_4_0=RULE_STRING
		{
			newLeafNode(lv_filename_4_0, grammarAccess.getAttackerAccess().getFilenameSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttackerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"filename",
        		lv_filename_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='source: ' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAttackerAccess().getSourceKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttackerAccess().getSourceIPAddressParserRuleCall_6_0()); 
	    }
		lv_source_6_0=ruleIPAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttackerRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_6_0, 
        		"IPAddress");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttackerAccess().getRequestsMaliciousRequestParserRuleCall_7_0()); 
	    }
		lv_requests_7_0=ruleMaliciousRequest		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttackerRule());
	        }
       		add(
       			$current, 
       			"requests",
        		lv_requests_7_0, 
        		"MaliciousRequest");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAttackerAccess().getRightCurlyBracketKeyword_8());
    }
)
;







// Entry rule entryRuleMaliciousRequest
entryRuleMaliciousRequest returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMaliciousRequestRule()); }
	 iv_ruleMaliciousRequest=ruleMaliciousRequest 
	 { $current=$iv_ruleMaliciousRequest.current; } 
	 EOF 
;

// Rule MaliciousRequest
ruleMaliciousRequest returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='MaliciousRequest' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMaliciousRequestAccess().getMaliciousRequestKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getMaliciousRequestAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMaliciousRequestRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMaliciousRequestAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='source: ' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMaliciousRequestAccess().getSourceKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMaliciousRequestAccess().getSourceIPAddressParserRuleCall_4_0()); 
	    }
		lv_source_4_0=ruleIPAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMaliciousRequestRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_4_0, 
        		"IPAddress");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='destination: ' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMaliciousRequestAccess().getDestinationKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMaliciousRequestAccess().getDestinationIPAddressParserRuleCall_6_0()); 
	    }
		lv_destination_6_0=ruleIPAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMaliciousRequestRule());
	        }
       		set(
       			$current, 
       			"destination",
        		lv_destination_6_0, 
        		"IPAddress");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='port: ' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMaliciousRequestAccess().getPortKeyword_7());
    }
(
(
		lv_port_8_0=RULE_INT
		{
			newLeafNode(lv_port_8_0, grammarAccess.getMaliciousRequestAccess().getPortINTTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMaliciousRequestRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"port",
        		lv_port_8_0, 
        		"INT");
	    }

)
)	otherlv_9='data: ' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMaliciousRequestAccess().getDataKeyword_9());
    }
(
(
		lv_data_10_0=RULE_STRING
		{
			newLeafNode(lv_data_10_0, grammarAccess.getMaliciousRequestAccess().getDataSTRINGTerminalRuleCall_10_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMaliciousRequestRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"data",
        		lv_data_10_0, 
        		"STRING");
	    }

)
)	otherlv_11='protocol: ' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMaliciousRequestAccess().getProtocolKeyword_11());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMaliciousRequestAccess().getProtocolProtocolEnumRuleCall_12_0()); 
	    }
		lv_protocol_12_0=ruleProtocol		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMaliciousRequestRule());
	        }
       		set(
       			$current, 
       			"protocol",
        		lv_protocol_12_0, 
        		"Protocol");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getMaliciousRequestAccess().getRightCurlyBracketKeyword_13());
    }
)
;





// Entry rule entryRuleNormalRequest
entryRuleNormalRequest returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNormalRequestRule()); }
	 iv_ruleNormalRequest=ruleNormalRequest 
	 { $current=$iv_ruleNormalRequest.current; } 
	 EOF 
;

// Rule NormalRequest
ruleNormalRequest returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='NormalRequest' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNormalRequestAccess().getNormalRequestKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getNormalRequestAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNormalRequestRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNormalRequestAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='source: ' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNormalRequestAccess().getSourceKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNormalRequestAccess().getSourceIPAddressParserRuleCall_4_0()); 
	    }
		lv_source_4_0=ruleIPAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNormalRequestRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_4_0, 
        		"IPAddress");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='destination: ' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getNormalRequestAccess().getDestinationKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNormalRequestAccess().getDestinationIPAddressParserRuleCall_6_0()); 
	    }
		lv_destination_6_0=ruleIPAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNormalRequestRule());
	        }
       		set(
       			$current, 
       			"destination",
        		lv_destination_6_0, 
        		"IPAddress");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='port: ' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getNormalRequestAccess().getPortKeyword_7());
    }
(
(
		lv_port_8_0=RULE_INT
		{
			newLeafNode(lv_port_8_0, grammarAccess.getNormalRequestAccess().getPortINTTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNormalRequestRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"port",
        		lv_port_8_0, 
        		"INT");
	    }

)
)	otherlv_9='data: ' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getNormalRequestAccess().getDataKeyword_9());
    }
(
(
		lv_data_10_0=RULE_STRING
		{
			newLeafNode(lv_data_10_0, grammarAccess.getNormalRequestAccess().getDataSTRINGTerminalRuleCall_10_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNormalRequestRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"data",
        		lv_data_10_0, 
        		"STRING");
	    }

)
)	otherlv_11='protocol: ' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getNormalRequestAccess().getProtocolKeyword_11());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNormalRequestAccess().getProtocolProtocolEnumRuleCall_12_0()); 
	    }
		lv_protocol_12_0=ruleProtocol		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNormalRequestRule());
	        }
       		set(
       			$current, 
       			"protocol",
        		lv_protocol_12_0, 
        		"Protocol");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getNormalRequestAccess().getRightCurlyBracketKeyword_13());
    }
)
;





// Entry rule entryRuleDefender
entryRuleDefender returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefenderRule()); }
	 iv_ruleDefender=ruleDefender 
	 { $current=$iv_ruleDefender.current; } 
	 EOF 
;

// Rule Defender
ruleDefender returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_type_0_0=	'Defender' 
    {
        newLeafNode(lv_type_0_0, grammarAccess.getDefenderAccess().getTypeDefenderKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefenderRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_0_0, "Defender");
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDefenderAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefenderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDefenderAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='belongTo' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDefenderAccess().getBelongToKeyword_3());
    }
(
(
		lv_filename_4_0=RULE_STRING
		{
			newLeafNode(lv_filename_4_0, grammarAccess.getDefenderAccess().getFilenameSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefenderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"filename",
        		lv_filename_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='source: ' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDefenderAccess().getSourceKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefenderAccess().getSourceIPAddressParserRuleCall_6_0()); 
	    }
		lv_source_6_0=ruleIPAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefenderRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_6_0, 
        		"IPAddress");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDefenderAccess().getSecurityPolicylistSecurityPolicyListParserRuleCall_7_0()); 
	    }
		lv_securityPolicylist_7_0=ruleSecurityPolicyList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefenderRule());
	        }
       		set(
       			$current, 
       			"securityPolicylist",
        		lv_securityPolicylist_7_0, 
        		"SecurityPolicyList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDefenderAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleSecurityPolicyList
entryRuleSecurityPolicyList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSecurityPolicyListRule()); }
	 iv_ruleSecurityPolicyList=ruleSecurityPolicyList 
	 { $current=$iv_ruleSecurityPolicyList.current; } 
	 EOF 
;

// Rule SecurityPolicyList
ruleSecurityPolicyList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SecurityPolicyList' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSecurityPolicyListAccess().getSecurityPolicyListKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSecurityPolicyListAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSecurityPolicyListRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSecurityPolicyListAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSecurityPolicyListAccess().getSecurityPoliciesSecurityPolicyParserRuleCall_3_0()); 
	    }
		lv_securityPolicies_3_0=ruleSecurityPolicy		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSecurityPolicyListRule());
	        }
       		add(
       			$current, 
       			"securityPolicies",
        		lv_securityPolicies_3_0, 
        		"SecurityPolicy");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSecurityPolicyListAccess().getConditionsConditionParserRuleCall_4_0()); 
	    }
		lv_conditions_4_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSecurityPolicyListRule());
	        }
       		add(
       			$current, 
       			"conditions",
        		lv_conditions_4_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSecurityPolicyListAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSecurityPolicy
entryRuleSecurityPolicy returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSecurityPolicyRule()); }
	 iv_ruleSecurityPolicy=ruleSecurityPolicy 
	 { $current=$iv_ruleSecurityPolicy.current; } 
	 EOF 
;

// Rule SecurityPolicy
ruleSecurityPolicy returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SecurityPolicy' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSecurityPolicyAccess().getSecurityPolicyKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSecurityPolicyAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSecurityPolicyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSecurityPolicyAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSecurityPolicyAccess().getEndPointEndPointParserRuleCall_3_0()); 
	    }
		lv_endPoint_3_0=ruleEndPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSecurityPolicyRule());
	        }
       		set(
       			$current, 
       			"endPoint",
        		lv_endPoint_3_0, 
        		"EndPoint");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='if' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSecurityPolicyAccess().getIfKeyword_4());
    }
	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSecurityPolicyAccess().getLeftParenthesisKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSecurityPolicyRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getSecurityPolicyAccess().getConditionlistConditionCrossReference_6_0()); 
	}

)
)((
(
(
		lv_operationList_7_1=	'&' 
    {
        newLeafNode(lv_operationList_7_1, grammarAccess.getSecurityPolicyAccess().getOperationListAmpersandKeyword_7_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSecurityPolicyRule());
	        }
       		addWithLastConsumed($current, "operationList", lv_operationList_7_1, null);
	    }

    |		lv_operationList_7_2=	'|' 
    {
        newLeafNode(lv_operationList_7_2, grammarAccess.getSecurityPolicyAccess().getOperationListVerticalLineKeyword_7_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSecurityPolicyRule());
	        }
       		addWithLastConsumed($current, "operationList", lv_operationList_7_2, null);
	    }

)

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSecurityPolicyRule());
	        }
        }
	otherlv_8=RULE_ID
	{
		newLeafNode(otherlv_8, grammarAccess.getSecurityPolicyAccess().getConditionlistConditionCrossReference_7_1_0()); 
	}

)
))*	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSecurityPolicyAccess().getRightParenthesisKeyword_8());
    }
	otherlv_10='then' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSecurityPolicyAccess().getThenKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSecurityPolicyAccess().getTrueActionListActionParserRuleCall_10_0()); 
	    }
		lv_trueActionList_11_0=ruleAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSecurityPolicyRule());
	        }
       		add(
       			$current, 
       			"trueActionList",
        		lv_trueActionList_11_0, 
        		"Action");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12='&' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSecurityPolicyAccess().getAmpersandKeyword_11_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSecurityPolicyAccess().getTrueActionListActionParserRuleCall_11_1_0()); 
	    }
		lv_trueActionList_13_0=ruleAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSecurityPolicyRule());
	        }
       		add(
       			$current, 
       			"trueActionList",
        		lv_trueActionList_13_0, 
        		"Action");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='otherwise' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSecurityPolicyAccess().getOtherwiseKeyword_12());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSecurityPolicyAccess().getFalseActionListActionParserRuleCall_13_0()); 
	    }
		lv_falseActionList_15_0=ruleAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSecurityPolicyRule());
	        }
       		add(
       			$current, 
       			"falseActionList",
        		lv_falseActionList_15_0, 
        		"Action");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16='&' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getSecurityPolicyAccess().getAmpersandKeyword_14_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSecurityPolicyAccess().getFalseActionListActionParserRuleCall_14_1_0()); 
	    }
		lv_falseActionList_17_0=ruleAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSecurityPolicyRule());
	        }
       		add(
       			$current, 
       			"falseActionList",
        		lv_falseActionList_17_0, 
        		"Action");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getSecurityPolicyAccess().getRightCurlyBracketKeyword_15());
    }
)
;





// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	 iv_ruleCondition=ruleCondition 
	 { $current=$iv_ruleCondition.current; } 
	 EOF 
;

// Rule Condition
ruleCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Condition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getConditionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getConditionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConditionAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getSubConditionListSubConditionParserRuleCall_3_0()); 
	    }
		lv_subConditionList_3_0=ruleSubCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionRule());
	        }
       		add(
       			$current, 
       			"subConditionList",
        		lv_subConditionList_3_0, 
        		"SubCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='&' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConditionAccess().getAmpersandKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getSubConditionListSubConditionParserRuleCall_4_1_0()); 
	    }
		lv_subConditionList_5_0=ruleSubCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionRule());
	        }
       		add(
       			$current, 
       			"subConditionList",
        		lv_subConditionList_5_0, 
        		"SubCondition");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getConditionAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	 iv_ruleAction=ruleAction 
	 { $current=$iv_ruleAction.current; } 
	 EOF 
;

// Rule Action
ruleAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getActionAccess().getDropRequestParserRuleCall_0()); 
    }
    this_DropRequest_0=ruleDropRequest
    { 
        $current = $this_DropRequest_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActionAccess().getBlockSenderParserRuleCall_1()); 
    }
    this_BlockSender_1=ruleBlockSender
    { 
        $current = $this_BlockSender_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActionAccess().getPassRequestParserRuleCall_2()); 
    }
    this_PassRequest_2=rulePassRequest
    { 
        $current = $this_PassRequest_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSubCondition
entryRuleSubCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubConditionRule()); }
	 iv_ruleSubCondition=ruleSubCondition 
	 { $current=$iv_ruleSubCondition.current; } 
	 EOF 
;

// Rule SubCondition
ruleSubCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSubConditionAccess().getProtocolCheckParserRuleCall_0()); 
    }
    this_ProtocolCheck_0=ruleProtocolCheck
    { 
        $current = $this_ProtocolCheck_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubConditionAccess().getHTTPMethodCheckParserRuleCall_1()); 
    }
    this_HTTPMethodCheck_1=ruleHTTPMethodCheck
    { 
        $current = $this_HTTPMethodCheck_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubConditionAccess().getRegExpMatchParserRuleCall_2()); 
    }
    this_RegExpMatch_2=ruleRegExpMatch
    { 
        $current = $this_RegExpMatch_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubConditionAccess().getFrequencyCheckParserRuleCall_3()); 
    }
    this_FrequencyCheck_3=ruleFrequencyCheck
    { 
        $current = $this_FrequencyCheck_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSubConditionAccess().getHTTPParamLenCheckParserRuleCall_4()); 
    }
    this_HTTPParamLenCheck_4=ruleHTTPParamLenCheck
    { 
        $current = $this_HTTPParamLenCheck_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleProtocolCheck
entryRuleProtocolCheck returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProtocolCheckRule()); }
	 iv_ruleProtocolCheck=ruleProtocolCheck 
	 { $current=$iv_ruleProtocolCheck.current; } 
	 EOF 
;

// Rule ProtocolCheck
ruleProtocolCheck returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'isRequestProtocolEqualsTo' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getProtocolCheckAccess().getNameIsRequestProtocolEqualsToKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProtocolCheckRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "isRequestProtocolEqualsTo");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getProtocolCheckAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolCheckAccess().getValueProtocolEnumRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleProtocol		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolCheckRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Protocol");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getProtocolCheckAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleHTTPMethodCheck
entryRuleHTTPMethodCheck returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHTTPMethodCheckRule()); }
	 iv_ruleHTTPMethodCheck=ruleHTTPMethodCheck 
	 { $current=$iv_ruleHTTPMethodCheck.current; } 
	 EOF 
;

// Rule HTTPMethodCheck
ruleHTTPMethodCheck returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'isHTTPMethodEqualsTo' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getHTTPMethodCheckAccess().getNameIsHTTPMethodEqualsToKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHTTPMethodCheckRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "isHTTPMethodEqualsTo");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHTTPMethodCheckAccess().getLeftParenthesisKeyword_1());
    }
(
(
(
		lv_value_2_1=	'GET' 
    {
        newLeafNode(lv_value_2_1, grammarAccess.getHTTPMethodCheckAccess().getValueGETKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHTTPMethodCheckRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_2_1, null);
	    }

    |		lv_value_2_2=	'POST' 
    {
        newLeafNode(lv_value_2_2, grammarAccess.getHTTPMethodCheckAccess().getValuePOSTKeyword_2_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHTTPMethodCheckRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_2_2, null);
	    }

    |		lv_value_2_3=	'HEAD' 
    {
        newLeafNode(lv_value_2_3, grammarAccess.getHTTPMethodCheckAccess().getValueHEADKeyword_2_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHTTPMethodCheckRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_2_3, null);
	    }

    |		lv_value_2_4=	'DELETE' 
    {
        newLeafNode(lv_value_2_4, grammarAccess.getHTTPMethodCheckAccess().getValueDELETEKeyword_2_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHTTPMethodCheckRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_2_4, null);
	    }

    |		lv_value_2_5=	'PUT' 
    {
        newLeafNode(lv_value_2_5, grammarAccess.getHTTPMethodCheckAccess().getValuePUTKeyword_2_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHTTPMethodCheckRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_2_5, null);
	    }

)

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getHTTPMethodCheckAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleRegExpMatch
entryRuleRegExpMatch returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRegExpMatchRule()); }
	 iv_ruleRegExpMatch=ruleRegExpMatch 
	 { $current=$iv_ruleRegExpMatch.current; } 
	 EOF 
;

// Rule RegExpMatch
ruleRegExpMatch returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'isParaContentMatchRegExp' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getRegExpMatchAccess().getNameIsParaContentMatchRegExpKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRegExpMatchRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "isParaContentMatchRegExp");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRegExpMatchAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getRegExpMatchAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRegExpMatchRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRegExpMatchAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleFrequencyCheck
entryRuleFrequencyCheck returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFrequencyCheckRule()); }
	 iv_ruleFrequencyCheck=ruleFrequencyCheck 
	 { $current=$iv_ruleFrequencyCheck.current; } 
	 EOF 
;

// Rule FrequencyCheck
ruleFrequencyCheck returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=	'isRequestFrequencyLessThan' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getFrequencyCheckAccess().getNameIsRequestFrequencyLessThanKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFrequencyCheckRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "isRequestFrequencyLessThan");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFrequencyCheckAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_value_2_0=RULE_INT
		{
			newLeafNode(lv_value_2_0, grammarAccess.getFrequencyCheckAccess().getValueINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFrequencyCheckRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"INT");
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFrequencyCheckAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleHTTPParamLenCheck
entryRuleHTTPParamLenCheck returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHTTPParamLenCheckRule()); }
	 iv_ruleHTTPParamLenCheck=ruleHTTPParamLenCheck 
	 { $current=$iv_ruleHTTPParamLenCheck.current; } 
	 EOF 
;

// Rule HTTPParamLenCheck
ruleHTTPParamLenCheck returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_name_0_0=	'isParaLenghtLessThan' 
    {
        newLeafNode(lv_name_0_0, grammarAccess.getHTTPParamLenCheckAccess().getNameIsParaLenghtLessThanKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHTTPParamLenCheckRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "isParaLenghtLessThan");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getHTTPParamLenCheckAccess().getLeftParenthesisKeyword_0_1());
    }
(
(
		lv_value_2_0=RULE_INT
		{
			newLeafNode(lv_value_2_0, grammarAccess.getHTTPParamLenCheckAccess().getValueINTTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHTTPParamLenCheckRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"INT");
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getHTTPParamLenCheckAccess().getRightParenthesisKeyword_0_3());
    }
)
    |((
(
		lv_name_4_0=	'isParaLenghtGreaterThan' 
    {
        newLeafNode(lv_name_4_0, grammarAccess.getHTTPParamLenCheckAccess().getNameIsParaLenghtGreaterThanKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHTTPParamLenCheckRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_4_0, "isParaLenghtGreaterThan");
	    }

)
)	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getHTTPParamLenCheckAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		lv_value_6_0=RULE_INT
		{
			newLeafNode(lv_value_6_0, grammarAccess.getHTTPParamLenCheckAccess().getValueINTTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHTTPParamLenCheckRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_6_0, 
        		"INT");
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getHTTPParamLenCheckAccess().getRightParenthesisKeyword_1_3());
    }
)
    |((
(
		lv_name_8_0=	'isParaLenghtEqualsTo' 
    {
        newLeafNode(lv_name_8_0, grammarAccess.getHTTPParamLenCheckAccess().getNameIsParaLenghtEqualsToKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHTTPParamLenCheckRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_8_0, "isParaLenghtEqualsTo");
	    }

)
)	otherlv_9='(' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getHTTPParamLenCheckAccess().getLeftParenthesisKeyword_2_1());
    }
(
(
		lv_value_10_0=RULE_INT
		{
			newLeafNode(lv_value_10_0, grammarAccess.getHTTPParamLenCheckAccess().getValueINTTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHTTPParamLenCheckRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_10_0, 
        		"INT");
	    }

)
)	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getHTTPParamLenCheckAccess().getRightParenthesisKeyword_2_3());
    }
))
;





// Entry rule entryRuleEndPoint
entryRuleEndPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEndPointRule()); }
	 iv_ruleEndPoint=ruleEndPoint 
	 { $current=$iv_ruleEndPoint.current; } 
	 EOF 
;

// Rule EndPoint
ruleEndPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='endpoint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEndPointAccess().getEndpointKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEndPointAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_port_2_0=RULE_INT
		{
			newLeafNode(lv_port_2_0, grammarAccess.getEndPointAccess().getPortINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEndPointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"port",
        		lv_port_2_0, 
        		"INT");
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEndPointAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEndPointAccess().getProtocolProtocolEnumRuleCall_4_0()); 
	    }
		lv_protocol_4_0=ruleProtocol		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEndPointRule());
	        }
       		set(
       			$current, 
       			"protocol",
        		lv_protocol_4_0, 
        		"Protocol");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEndPointAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleDropRequest
entryRuleDropRequest returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDropRequestRule()); }
	 iv_ruleDropRequest=ruleDropRequest 
	 { $current=$iv_ruleDropRequest.current; } 
	 EOF 
;

// Rule DropRequest
ruleDropRequest returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_action_0_0=	'drop' 
    {
        newLeafNode(lv_action_0_0, grammarAccess.getDropRequestAccess().getActionDropKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDropRequestRule());
	        }
       		setWithLastConsumed($current, "action", lv_action_0_0, "drop");
	    }

)
)
;





// Entry rule entryRuleBlockSender
entryRuleBlockSender returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockSenderRule()); }
	 iv_ruleBlockSender=ruleBlockSender 
	 { $current=$iv_ruleBlockSender.current; } 
	 EOF 
;

// Rule BlockSender
ruleBlockSender returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_action_0_0=	'block' 
    {
        newLeafNode(lv_action_0_0, grammarAccess.getBlockSenderAccess().getActionBlockKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBlockSenderRule());
	        }
       		setWithLastConsumed($current, "action", lv_action_0_0, "block");
	    }

)
)
;





// Entry rule entryRulePassRequest
entryRulePassRequest returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPassRequestRule()); }
	 iv_rulePassRequest=rulePassRequest 
	 { $current=$iv_rulePassRequest.current; } 
	 EOF 
;

// Rule PassRequest
rulePassRequest returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_action_0_0=	'pass' 
    {
        newLeafNode(lv_action_0_0, grammarAccess.getPassRequestAccess().getActionPassKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPassRequestRule());
	        }
       		setWithLastConsumed($current, "action", lv_action_0_0, "pass");
	    }

)
)
;





// Entry rule entryRuleIPAddress
entryRuleIPAddress returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIPAddressRule()); }
	 iv_ruleIPAddress=ruleIPAddress 
	 { $current=$iv_ruleIPAddress.current; } 
	 EOF 
;

// Rule IPAddress
ruleIPAddress returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_byte1_0_0=RULE_INT
		{
			newLeafNode(lv_byte1_0_0, grammarAccess.getIPAddressAccess().getByte1INTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIPAddressRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"byte1",
        		lv_byte1_0_0, 
        		"INT");
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIPAddressAccess().getFullStopKeyword_1());
    }
(
(
		lv_byte2_2_0=RULE_INT
		{
			newLeafNode(lv_byte2_2_0, grammarAccess.getIPAddressAccess().getByte2INTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIPAddressRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"byte2",
        		lv_byte2_2_0, 
        		"INT");
	    }

)
)	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIPAddressAccess().getFullStopKeyword_3());
    }
(
(
		lv_byte3_4_0=RULE_INT
		{
			newLeafNode(lv_byte3_4_0, grammarAccess.getIPAddressAccess().getByte3INTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIPAddressRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"byte3",
        		lv_byte3_4_0, 
        		"INT");
	    }

)
)	otherlv_5='.' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIPAddressAccess().getFullStopKeyword_5());
    }
(
(
		lv_byte4_6_0=RULE_INT
		{
			newLeafNode(lv_byte4_6_0, grammarAccess.getIPAddressAccess().getByte4INTTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIPAddressRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"byte4",
        		lv_byte4_6_0, 
        		"INT");
	    }

)
))
;





// Rule Protocol
ruleProtocol returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='HTTP' 
	{
        $current = grammarAccess.getProtocolAccess().getHTTPEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getProtocolAccess().getHTTPEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='HTTPS' 
	{
        $current = grammarAccess.getProtocolAccess().getHTTPSEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getProtocolAccess().getHTTPSEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='FTP' 
	{
        $current = grammarAccess.getProtocolAccess().getFTPEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getProtocolAccess().getFTPEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='SSH' 
	{
        $current = grammarAccess.getProtocolAccess().getSSHEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getProtocolAccess().getSSHEnumLiteralDeclaration_3()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


